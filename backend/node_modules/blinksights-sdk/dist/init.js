"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BlinksightsClient = void 0;
const axios_1 = __importDefault(require("axios"));
const constants_1 = require("./constants");
class BlinksightsClient {
    /**
     * Create a new Blinksights client
     * @param apiKey The API key
     */
    constructor(apiKey) {
        this.axios = axios_1.default.create({
            baseURL: constants_1.API_URL,
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${apiKey}`
            }
        });
    }
    /**
     * Track a render event
     * @param url The URL of the blink being rendered
     * @param action The blink action object\
     */
    async trackRenderV1(url, action) {
        this.axios.post('/api/v1/track-render', {
            "url": url,
            "action": action
        });
    }
    /**
     * Track an action event
     * @param headers The request headers
     * @param payerPubKey The payer's public key
     * @param requestUrl The request URL
     */
    async trackActionV1(headers, payerPubKey, requestUrl) {
        const referrer = headers.get('referer'); // Url of the originial blink
        this.axios.post('/api/v1/track-action', {
            "payerPubKey": payerPubKey,
            "requestUrl": requestUrl,
            "blinkUrl": referrer
        });
    }
}
exports.BlinksightsClient = BlinksightsClient;
